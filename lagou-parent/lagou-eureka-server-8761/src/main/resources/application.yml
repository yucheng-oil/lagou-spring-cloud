server:
  port: 8761

spring:
  application:
    name: lagou-cloud-eureka-server   #应用名称，会在Eureka中作为服务的id标识（serviceId）

eureka:
  client:
    service-url:  #客户端与EurekaServer交互的地址，如果是集群，也需要写其 它Server的地址
      #如果有更多的eureka实例，用“,”拼接
      defaultZone: http://LagouCloudEurekaServerB:8762/eureka/
    register-with-eureka: true  #自己就是服务不需要注册自己（集群模式下改为true）
    fetch-registry: true   #自己就是服务不需要从Eureka Server获取服务信息,默认为true，置为false
  instance:
    hostname: LagouCloudEurekaServerA
    #使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）
    prefer-ip-address: true
    #⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@


#spring:
#  application:
#    name: lagou-cloud-eureka-server
#
#---
#server:
#  port: 8761
#
#spring:
#  profiles: LagouCloudEurekaServerA   #应用名称，会在Eureka中作为服务的id标识（serviceId）
#
#eureka:
#  client:
#    service-url:  #客户端与EurekaServer交互的地址，如果是集群，也需要写其 它Server的地址
#      #如果有更多的eureka实例，用“,”拼接
#      defaultZone: http://LagouCloudEurekaServerB:8762/eureka/
#    register-with-eureka: true  #自己就是服务不需要注册自己（集群模式下改为true）
#    fetch-registry: true   #自己就是服务不需要从Eureka Server获取服务信息,默认为true，置为false
#  instance:
#    hostname: LagouCloudEurekaServerA
#
#---
#server:
#  port: 8762
#
#spring:
#  profiles: LagouCloudEurekaServerB   #应用名称，会在Eureka中作为服务的id标识（serviceId）
#
#eureka:
#  client:
#    service-url:
#      defaultZone: http://LagouCloudEurekaServerA:8761/eureka/
#    register-with-eureka: true
#    fetch-registry: true
#  instance:
#    hostname: LagouCloudEurekaServerB